package main

import (
	"errors"

	tele "gopkg.in/tucnak/telebot.v3"
)

func provideUserToContext(next tele.HandlerFunc) tele.HandlerFunc {
	return func(tlg tele.Context) error {
		user, err := LoadUser(tlg.Sender().ID)
		if err != nil {
			return tlg.Send(err.Error())
		}

		tlg.Set("user", user)
		return next(tlg)
	}
}

func checkIsActive(next tele.HandlerFunc) tele.HandlerFunc {
	return func(tlg tele.Context) error {
		user, ok := tlg.Get("user").(*User)
		if !ok {
			err := errors.New("–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
			log.Warn(err)
			return tlg.Send(err.Error())
		}

		if user.Admin {
			tlg.Set("menu", adminMenu)
			return next(tlg)
		}

		if user.IsActive() {
			tlg.Set("menu", emplMenu)
			return next(tlg)
		}

		return tlg.Send("–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–π, –∫ –∫–æ—Ç–æ—Ä—ã–º —É —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø", startMenu)
	}
}

func ensureIsAdmin(next tele.HandlerFunc) tele.HandlerFunc {
	return func(tlg tele.Context) error {
		user, ok := tlg.Get("user").(*User)
		if !ok {
			err := errors.New("–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
			log.Warn(err)
			return tlg.Send(err.Error())
		}

		if user.Admin {
			return next(tlg)
		} else {
			return tlg.Send("–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∫–æ–º–ø–∞–Ω–∏–∏", emplMenu)
		}
	}
}

func provideCompanyToContext(next tele.HandlerFunc) tele.HandlerFunc {
	return func(tlg tele.Context) error {
		user, ok := tlg.Get("user").(*User)
		if !ok {
			err := errors.New("–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
			log.Warn(err)
			return tlg.Send(err.Error())
		}
		company, err := LoadCompany(user.CompanyId)
		if err != nil {
			return tlg.Send(err.Error())
		}

		tlg.Set("company", company)

		return next(tlg)
	}
}

func SignOut() tele.HandlerFunc {
	return func(tlg tele.Context) error {
		if err := RemoveUser(tlg.Sender().ID); err != nil {
			log.Warn(err)
			return tlg.Send(err.Error())
		}

		user, ok := tlg.Get("user").(*User)
		if !ok {
			err := errors.New("–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
			log.Warn(err)
			return tlg.Send(err.Error())
		}
		if user.Admin {
			if err := RemoveCompany(user.CompanyId); err != nil {
				log.Warn(err)
				return tlg.Send(err.Error())
			}
			return tlg.Send("‚úÖ –£–¥–∞–ª–∏–ª –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤—è–∑–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏")
		}

		return tlg.Send("üëã –£–¥–∞–ª–∏–ª –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –Ω–æ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞", startMenu)
	}
}
